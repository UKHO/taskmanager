@page
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using NCNEPortal.Enums
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script type="text/javascript" src="~/js/Index.js" asp-append-version="true"></script>

<div class="row pt-1">
    <div class="col-4">
        <a asp-page="./Index">
            <img id="ukhoLogo" src="images/ukhologo.svg" alt="UKHO Logo" />
        </a>
    </div>

    <div class="col-8">
        <div class="row mb-2">
            <div id="menuItemList" class="col-10">
                <button id="btnMyTaskList" class="btn btn-primary">My Task List</button>
                <button id="btnTeamTasks" class="btn btn-primary">Team Tasks</button>
                <button id="btnStats" class="btn btn-primary">Statistics</button>
                <button id="btnHistoricalTasks" class="btn btn-primary">Historical Tasks</button>
                <span class="ml-3" id="userFullName">Hello <strong>@Model.CurrentUser.DisplayName</strong></span>
            </div>
            <div class="col-2">
                <button id="btnNewTask" class="btn btn-primary">New Task</button>
            </div>
        </div>
        <div class="row">
            <div class="col-6 pr-0">
                <input id="txtGlobalSearch" type="search" class="form-text-input" placeholder="Type search term..." aria-label="Search text for tasks" title="Search text for tasks" />
            </div>
        </div>
    </div>
</div>

<h3>New Chart / New Edition</h3>

<div class="card mb-4 mt-3">
    <h3 id="myTasksTitle">My Tasks</h3>
    <div class="card-body" style="width: 100%">
        <table id="inFlightTasks" class="table-striped" style="width: 100%">
            <thead>
                <tr>
                    <th><span class="screen-reader-only">Task Notes</span></th>
                    <th>Process ID</th>
                    <th style="min-width: 3.6rem;">Chart Type</th>
                    <th style="max-width: 3.9rem;">Chart Number</th>
                    <th style="min-width: 3.9rem;">Status</th>
                    <th>User</th>
                    <th style="min-width: 7.0rem;">Forms</th>
                    <th style="min-width: 7.0rem;">Commit to Print</th>
                    <th style="min-width: 7.0rem;">CIS</th>
                    <th style="min-width: 7.0rem;">Publication</th>
                    <th>Country</th>
                    <th style="max-width: 4.5rem;">Workflow Type</th>
                    <th><span class="screen-reader-only">Assign Tasks</span></th>
                    <th><span class="screen-reader-only">Edit Task Notes</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.NcneTasks.Where(t => t.Status == NcneTaskStatus.InProgress.ToString()))
                {
                    <tr>
                        <td class="details-control"><i class="fa"></i></td>
                        <td>
                            <a asp-page="Workflow" asp-route-ProcessId="@task.ProcessId">@task.ProcessId</a>
                        </td>
                        <td>
                            @task.ChartType
                        </td>
                        <td>
                            @task.ChartNumber
                        </td>
                        <td>
                            @task.CurrentStage
                        </td>
                        <td>
                            @task.Assigned.DisplayName
                        </td>
                        <td>
                            @task.AnnounceDate?.ToShortDateString()
                            @switch ((task.FormDateStatus))
                            {
                                case (int)ncneDateStatus.Green:
                                    {
                                        <i class="fa fa-check-circle" style=color:green></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Amber:
                                    {
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Red:
                                    {
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        break;
                                    }
                            }
                        </td>
                        <td>
                            @task.CommitDate?.ToShortDateString()
                            @switch ((task.CommitDateStatus))
                            {
                                case (int)ncneDateStatus.Green:
                                    {
                                        <i class="fa fa-check-circle" style=color:green></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Amber:
                                    {
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Red:
                                    {
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        break;
                                    }
                            }

                        </td>
                        <td>
                            @task.CisDate?.ToShortDateString()
                            @switch ((task.CisDateStatus))
                            {
                                case (int)ncneDateStatus.Green:
                                    {
                                        <i class="fa fa-check-circle" style=color:green></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Amber:
                                    {
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Red:
                                    {
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        break;
                                    }
                            }

                        </td>
                        <td>
                            @task.PublicationDate?.ToShortDateString()
                            @switch ((task.PublishDateStatus))
                            {
                                case (int)ncneDateStatus.Green:
                                    {
                                        <i class="fa fa-check-circle" style=color:green></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Amber:
                                    {
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        <i class="fa fa-circle" style=color:darkorange></i>
                                        break;
                                    }
                                case (int)ncneDateStatus.Red:
                                    {
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        <i class="fa fa-circle" style=color:red></i>
                                        break;
                                    }
                            }

                        </td>
                        <td>
                            @task.Country
                        </td>
                        <td>
                            @task.WorkflowType
                        </td>
                        <td>
                            <div data-toggle="tooltip" data-placement="top" title="Assign Task">
                                <a class="assignTaskItem pr-1" data-processid="@task.ProcessId" aria-label="Assign Task" href="#" style="cursor: pointer;">
                                    <i class="far fa-user"></i>
                                </a>
                            </div>
                        </td>
                        <td>
                            <div data-toggle="tooltip" data-placement="top" title="Task Notes">
                                <a class="taskNoteItem pr-1" data-processid="@task.ProcessId" data-tasknote="@task.TaskNote?.Text" aria-label="Edit Task Note" href="#" style="cursor: pointer;">
                                    <i class="far fa-edit"></i>
                                </a>
                            </div>
                        </td>
                        <td>
                            @task.TaskNote?.Text
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="card mb-4 mt-3" id="assignedTasksTable">
    <h3>Associated Tasks</h3>
    <div class="card-body" style="width: 100%">
        <table id="assignedTasks" class="table-striped" style="width: 100%">
            <thead>
                <tr>
                    <th>Process ID</th>
                    <th style="min-width: 3.6rem;">Chart Type</th>
                    <th style="max-width: 3.6rem;">Chart Number</th>
                    <th>Country</th>
                    <th style="max-width: 4.0rem;">Workflow Type</th>
                    <th style="min-width: 3.9rem;">Status</th>
                    <th style="min-width: 5.9rem;">Compiler</th>
                    <th style="min-width: 5.9rem;">Verifier 1</th>
                    <th style="min-width: 5.9rem;">Verifier 2</th>
                    <th style="min-width: 5.9rem;">100% Check</th>
                    <th style="max-width: 4.0rem;">Last Update</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var task in Model.NcneTasks.Where(t => t.Status == NcneTaskStatus.InProgress.ToString()
                                   &&
                                   (t.TaskRole.VerifierOne?.UserPrincipalName == Model.CurrentUser.UserPrincipalName
|| t.TaskRole.Compiler?.UserPrincipalName == Model.CurrentUser.UserPrincipalName
|| t.TaskRole.VerifierTwo?.UserPrincipalName == Model.CurrentUser.UserPrincipalName
|| t.TaskRole.HundredPercentCheck?.UserPrincipalName == Model.CurrentUser.UserPrincipalName)))
                {
                    <tr>
                        <td>
                            <a asp-page="Workflow" asp-route-ProcessId="@task.ProcessId">@task.ProcessId</a>
                        </td>
                        <td>
                            @task.ChartType
                        </td>
                        <td>
                            @task.ChartNumber
                        </td>
                        <td>
                            @task.Country
                        </td>
                        <td>
                            @task.WorkflowType
                        </td>
                        <td>
                            @task.CurrentStage
                        </td>
                        <td>
                            @task.TaskRole.Compiler?.DisplayName
                        </td>
                        <td>
                            @task.TaskRole.VerifierOne?.DisplayName
                        </td>
                        <td>
                            @task.TaskRole.VerifierTwo?.DisplayName
                        </td>
                        <td>
                            @task.TaskRole.HundredPercentCheck?.DisplayName
                        </td>
                        <td>
                            @if (task.StatusChangeDate != null)
                            {
                                @task.StatusChangeDate.Value.ToShortDateString()
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>

@* Modal Edit task note *@
<div class="modal fade" id="editTaskNoteModal" tabindex="-1" role="dialog" aria-labelledby="EditTaskNote" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="frmTaskNote" asp-page-handler="TaskNote">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Task Note</h4>
                </div>
                <div class="modal-body">
                    <div id="modal-body">
                        <textarea style="height: 100px;" maxlength="4000" id="txtNote" name="taskNote" class="form-control"></textarea>
                        <input type="hidden" id="hdnProcessId" name="processId" />
                        <br />
                        <div id="editTaskNoteError"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClearTaskNote" class="btn btn-outline-secondary mr-auto pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Clear">Clear</button>
                    <button type="button" id="btnCancelTaskNote" class="btn btn-outline-secondary pl-4 pr-4" accesskey="c" data-dismiss="modal" data-toggle="tooltip" data-placement="left" title="Cancel & close this popup">Cancel</button>
                    <button type="submit" form="frmTaskNote" id="btnPostTaskNote" class="btn btn-primary pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Save Task Note">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Modal Assign task to user *@
<div class="modal fade" id="assignTaskModal" tabindex="-1" role="dialog" aria-labelledby="AssignTaskToUser" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Assign Task</h4>
            </div>
            <div class="modal-body">
                <div id="assignTaskModal-body">
                    <div id="assignTaskTypeahead">
                        <div class="text-input-wrap">
                            <input id="txtUserName" type="text" class="typeahead tt-query form-text-input" autocomplete="off" spellcheck="false">
                        </div>
                        <section class="dialog error collapse mt-3" id="assignTaskTypeaheadError">
                            <h5>
                                <i class="fas fa-times-circle" style="font-size: 1.25rem;"></i>
                                <span id="assignTaskErrorMsg">Failed to look up users</span>
                            </h5>
                        </section>
                    </div>
                    <input type="hidden" id="hdnAssignTaskProcessId" name="processId" />
                    <input type="hidden" id="hdnAssignTaskUpn" name="userPrincipalName" />
                    <br />
                    <div id="AssignTaskError"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCancelAssignTask" class="btn btn-outline-secondary pl-4 pr-4" accesskey="c" data-dismiss="modal" data-toggle="tooltip" data-placement="left" title="Cancel & close this popup">Cancel</button>
                <button type="button" id="btnAssignTaskToUser" class="btn btn-primary pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Assign to User">Ok</button>
            </div>
        </div>
    </div>
</div>
