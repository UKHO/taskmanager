@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script type="text/javascript" src="~/js/Index.js" asp-append-version="true"></script>

<div class="container-fluid">
    <div class="row pt-1">
        <div class="col-4 ml-0 pl-0">
            <a asp-page="/Index">
                <img id="ukhoLogo" src="~/images/ukhologo.svg" alt="UKHO Logo" />
            </a>
        </div>
        <div class="col-8">
            <div class="row mb-2">
                <div id="menuItemList" class="col-12">
                    <button id="btnMyTaskList" class="btn btn-primary">My Task List</button>
                    <button id="btnTeamTasks" class="btn btn-primary">Team Tasks</button>
                    <button id="btnStats" class="btn btn-primary">Statistics</button>
                    <button id="btnHistoricalTasks" class="btn btn-primary">Historical Tasks</button>
                    <span class="ml-3 float-right" id="userFullName" style="color: #09315B">Hello <strong>@Model.CurrentUser.DisplayName</strong></span>
                </div>
            </div>
            <div class="row">
                <div class="col-6 pr-0">
                    <input id="txtGlobalSearch" type="search" class="form-text-input" placeholder="Type search term..." aria-label="Search text for tasks" title="Search text for tasks" />
                </div>
                <div class="col-2">
                    <button type="button" id="btnSelectTeam" class="btn btn-primary"><i class="filterIcon fa fa-filter" aria-hidden="true" style="font-size: 75%"></i> Select Team</button>
                </div>
                <div class="col-4 m-0 p-0 float-right">
                    <h3 class="m-0 p-0  float-right" style="color: #09315B">Database Assessment</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card mb-4 mt-3">
    <h6>Unassigned Tasks</h6>
    <div class="card-body" style="width:100%">
        <table id="unassignedTasks" class="table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th style="min-width: 7.0rem;">DM End Date</th>
                    <th style="min-width: 4.0rem;">Days On Hold</th>
                    <th>RSDRA No.</th>
                    <th>Source Name</th>
                    <th>Workspace</th>
                    <th>Stage</th>
                    <th>Reviewer</th>
                    <th>Assessor</th>
                    <th>Verifier</th>
                    <th>Team</th>
                    <th><span class="screen-reader-only">Assign Tasks</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Tasks.Where(t => string.IsNullOrEmpty(t.Reviewer)))
                {
                    <tr>
                        <td>
                            <a asp-page="DbAssessment/@task.TaskStage" asp-route-ProcessId="@task.ProcessId">@task.ProcessId</a>
                        </td>
                        @* Use custom sort due to 'N/A' not being sortable *@
                        <td data-sort="@(task.DmEndDate.HasValue ? task.DmEndDate.Value.Ticks : 0)">
                            @Html.DisplayFor(model => task.DmEndDate)

                            @if (task.DaysToDmEndDateRedAlert ||
                                task.DaysToDmEndDateAmberAlert ||
                                task.DaysToDmEndDateGreenAlert)
                            {
                                <div class="right mr-1
                                 @(task.DaysToDmEndDateGreenAlert ? "alertText green" : "")
                                 @(task.DaysToDmEndDateAmberAlert ? "alertText amber" : "")
                                 @(task.DaysToDmEndDateRedAlert ? "alertText red" : "")">
                                    @Html.DisplayFor(model => task.DaysToDmEndDate)
                                </div>
                            }
                        </td>
                        <td>
                            <span>@Html.DisplayFor(model => task.OnHoldDays)</span>
                            <span class="float-right mr-2">
                                @if (task.IsOnHold)
                                {
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysGreen ? "onHoldGreenCircle" : "") @(task.OnHoldDaysAmber ? "onHoldAmberCircle" : "") @(task.OnHoldDaysRed ? "onHoldRedCircle": "")"></i>
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysAmber ? "onHoldAmberCircle" : "") @(task.OnHoldDaysRed ? "onHoldRedCircle" : "")" style="@(task.OnHoldDaysGreen ? "display: none" : "")"></i>
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysRed ? "onHoldRedCircle": "")" style="@(task.OnHoldDaysRed ? "" : "display: none")"></i>
                                }
                            </span>
                        </td>
                        <td>
                            @Html.DisplayFor(m => task.AssessmentDataRsdraNumber)
                        </td>
                        <td>
                            <span class="overflowElipsis" style="max-width: 10rem;" title="@task.AssessmentDataSourceDocumentName">
                                @Html.DisplayFor(m => task.AssessmentDataSourceDocumentName)
                            </span>
                        </td>
                        <td>
                            @task.Workspace
                        </td>
                        <td>
                            @task.TaskStage
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            @task.Team
                        </td>
                        <td>
                            <div data-toggle="tooltip" data-placement="top" title="Assign Task">
                                <a class="assignTaskItem" data-processid="@task.ProcessId" data-taskstage="@task.TaskStage" aria-label="Assign Task" href="#" style="cursor: pointer;">
                                    <i class="far fa-user"></i>
                                </a>
                            </div>
                        </td>
                        <td>
                            @task.TaskNoteText
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>
<div class="card mb-4 mt-3">
    <h6>In Flight Tasks</h6>
    <div class="card-body" style="width: 100%">
        <table id="inFlightTasks" class="table-striped" style="width: 100%">
            <thead>
                <tr>
                    <th><span class="screen-reader-only">Task Notes</span></th>
                    <th>ID</th>
                    <th style="min-width: 7.0rem;">DM End Date</th>
                    <th style="min-width: 4.0rem;">Days On Hold</th>
                    <th>RSDRA No.</th>
                    <th>Source Name</th>
                    <th>Workspace</th>
                    <th>Stage</th>
                    <th>Reviewer</th>
                    <th>Assessor</th>
                    <th>Verifier</th>
                    <th>Team</th>
                    <th><span class="screen-reader-only">Assign Tasks</span></th>
                    <th><span class="screen-reader-only">Edit Task Notes</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Tasks.Where(t => !string.IsNullOrEmpty(t.Reviewer)))
                {
                    <tr>
                        <td class="details-control"><i class="fa"></i></td>
                        <td>
                            <a asp-page="DbAssessment/@task.TaskStage" asp-route-ProcessId="@task.ProcessId">@task.ProcessId</a>
                        </td>
                        @* Use custom sort due to 'N/A' not being sortable *@
                        <td data-sort="@(task.DmEndDate.HasValue ? task.DmEndDate.Value.Ticks : 0)">
                            @Html.DisplayFor(model => task.DmEndDate)

                            @if (task.DaysToDmEndDateRedAlert ||
                                task.DaysToDmEndDateAmberAlert ||
                                task.DaysToDmEndDateGreenAlert)
                            {
                                <div class="right mr-1
                                 @(task.DaysToDmEndDateGreenAlert ? "alertText green" : "")
                                 @(task.DaysToDmEndDateAmberAlert ? "alertText amber" : "")
                                 @(task.DaysToDmEndDateRedAlert ? "alertText red" : "")">
                                    @Html.DisplayFor(model => task.DaysToDmEndDate)
                                </div>
                            }
                        </td>
                        <td>
                            <span>@Html.DisplayFor(model => task.OnHoldDays)</span>
                            <span class="float-right mr-2">
                                @if (task.IsOnHold)
                                {
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysGreen ? "onHoldGreenCircle" : "") @(task.OnHoldDaysAmber ? "onHoldAmberCircle" : "") @(task.OnHoldDaysRed ? "onHoldRedCircle": "")"></i>
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysAmber ? "onHoldAmberCircle" : "") @(task.OnHoldDaysRed ? "onHoldRedCircle" : "")" style="@(task.OnHoldDaysGreen ? "display: none" : "")"></i>
                                    <i class="fa fa-circle fa-sm @(task.OnHoldDaysRed ? "onHoldRedCircle": "")" style="@(task.OnHoldDaysRed ? "" : "display: none")"></i>
                                }
                            </span>
                        </td>
                        <td>
                            @Html.DisplayFor(m => task.AssessmentDataRsdraNumber)
                        </td>
                        <td>
                            <span class="overflowElipsis" style="max-width: 10rem;" title="@task.AssessmentDataSourceDocumentName">
                                @Html.DisplayFor(m => task.AssessmentDataSourceDocumentName)
                            </span>
                        </td>
                        <td>
                            @task.Workspace
                        </td>
                        <td>
                            @task.TaskStage
                        </td>
                        <td>
                            @task.Reviewer
                        </td>
                        <td>
                            @task.Assessor
                        </td>
                        <td>
                            @task.Verifier
                        </td>
                        <td>
                            @task.Team
                        </td>
                        <td>
                            <div data-toggle="tooltip" data-placement="top" title="Assign Task">
                                <a class="assignTaskItem pr-1" data-processid="@task.ProcessId" data-taskstage="@task.TaskStage" aria-label="Assign Task" href="#" style="cursor: pointer;">
                                    <i class="far fa-user"></i>
                                </a>
                            </div>
                        </td>
                        <td>
                            <div data-toggle="tooltip" data-placement="top" title="Task Notes">
                                <a class="taskNoteItem pr-1" data-processid="@task.ProcessId" data-tasknote="@task.TaskNoteText" aria-label="Edit Task Note" href="#" style="cursor: pointer;">
                                    <i class="far fa-edit"></i>
                                </a>
                            </div>
                        </td>
                        <td>
                            @task.TaskNoteText
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>

@* Modal Edit task note *@
<div class="modal fade" data-backdrop="static" data-keyboard="false" id="editTaskNoteModal" tabindex="-1" role="dialog" aria-label="Edit Task Note Modal Dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="frmTaskNote" asp-page-handler="TaskNote">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Task Note</h4>
                </div>
                <div class="modal-body">
                    <div id="modal-body">
                        <textarea style="height: 100px;" id="txtNote" name="taskNote" class="form-control" aria-label="Task Note Textbox"></textarea>
                        <input type="hidden" id="hdnProcessId" name="processId" />
                        <br />
                        <div id="editTaskNoteError"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClearTaskNote" class="btn btn-outline-secondary mr-auto pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Clear">Clear</button>
                    <button type="button" id="btnCancelTaskNote" class="btn btn-outline-secondary pl-4 pr-4" accesskey="c" data-dismiss="modal" data-toggle="tooltip" data-placement="left" title="Cancel & close this popup">Cancel</button>
                    <button type="submit" form="frmTaskNote" id="btnPostTaskNote" class="btn btn-primary pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Save Task Note">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Modal Assign task to user *@
<div class="modal fade" data-backdrop="static" data-keyboard="false" id="assignTaskModal" tabindex="-1" role="dialog" aria-label="Assign Task Modal Dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Assign Task</h4>
            </div>
            <div class="modal-body">
                <div id="assignTaskModal-body">
                    <div id="assignTaskTypeahead">
                        <div class="text-input-wrap">
                            <input id="txtUsername" type="text" class="typeahead tt-query form-text-input" autocomplete="off" spellcheck="false" aria-label="Username Textbox">
                        </div>
                        <div id="assignTaskErrorMessages" class="dialog error collapse mt-3 pb-1">
                            <h5 class="mb-3">
                                <i class="fas fa-times-circle" style="font-size: 1rem;"></i>
                                <span>There's a problem</span>
                            </h5>
                            <ol id="assignTaskErrorList" class="error-list"></ol>
                        </div>
                    </div>
                    <input type="hidden" id="hdnAssignTaskProcessId" name="processId" />
                    <input type="hidden" id="hdnAssignTaskStage" name="taskStage" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCancelAssignTask" class="btn btn-outline-secondary pl-4 pr-4" accesskey="c" data-dismiss="modal" data-toggle="tooltip" data-placement="left" title="Cancel & close this popup">Cancel</button>
                <button type="button" id="btnAssignTaskToUser" class="btn btn-primary pl-4 pr-4" accesskey="a" data-toggle="tooltip" data-placement="left" title="Assign to User">Ok</button>
            </div>
        </div>
    </div>
</div>

@* Modal Select Team to filter by *@
<div class="modal fade" data-backdrop="static" data-keyboard="false" id="selectTeamsModal" tabindex="-1" role="dialog" aria-label="Select Teams Modal Dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Teams</h4>
            </div>
            <div class="modal-body" id="selectTeams-body">
                <div class="mb-n3" style="overflow: hidden;">

                    @{ var id = "team0"; }

                    <div class="ml-3 mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input mt-0 teamsCheckbox" id="@(id)">
                            <label class="form-check-label teamsCheckboxLabel" for="@(id)">@Model.TeamsUnassigned</label>
                        </div>
                    </div>


                    @for (var i = 0; i < Model.TeamList.Count; i++)
                    {
                        id = $"team{i + 1}";

                        <div class="ml-3 mb-3">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input mt-0 teamsCheckbox" id="@(id)">
                                <label class="form-check-label teamsCheckboxLabel" for="@(id)">@Model.TeamList[i]</label>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <div class="float-left">
                                <button type="button" id="btnClearAllTeams" class="btn btn-default">Clear All</button>
                                <button type="button" id="btnSelectAllTeams" class="btn btn-default">Select All</button>
                            </div>
                            <div class="float-right">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" id="btnFilterTasksByTeam" class="btn btn-primary">OK</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
