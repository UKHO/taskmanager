variables:
  workflowCoordinator: $(Build.SourcesDirectory)\taskmanager\workflowcoordinator\workflowcoordinator.csproj
  workflowCoordinatorTests: $(Build.SourcesDirectory)\taskmanager\workflowcoordinatortests\workflowcoordinatortests.csproj
  taskmanagerDir: $(Build.SourcesDirectory)\TaskManager

trigger:
- master

pool:
  name: 'UKHO Windows 2019'

steps:

- powershell: |
    dotnet sln remove (dir **/*.csproj)
    dotnet sln add $(workflowCoordinator) $(workflowCoordinatorTests)
    dotnet sln list
  workingDirectory: $(taskmanagerDir)
  displayName: Remove all .csprojs and add relevent projects
  
- powershell: dotnet restore $(workflowCoordinator)
  displayName: Restore Workflow Coordinator packages

- powershell: dotnet restore $(workflowCoordinatorTests)
  displayName: Restore Workflow Coordinator test packages

- powershell: dotnet build $(workflowCoordinator) --no-restore
  displayName: Build Workflow Coordinator

- powershell: dotnet build $(workflowCoordinatorTests) --no-restore
  displayName: Build Workflow Coordinator Tests

- powershell: dotnet test $(workflowCoordinatorTests) --no-build --logger:trx -r $(Agent.BuildDirectory)/TestResults 
  displayName: Test Workflow Coordinator

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testRunner: VSTest
    testResultsFiles: '$(Agent.BuildDirectory)/TestResults/*.trx'
    failTaskOnFailedTests: true
    mergeTestResults: true

- powershell: dotnet publish $(workflowCoordinator) --no-build --output $(Build.ArtifactStagingDirectory)\workflowCoordinator
  displayName: Publish Workflow Coordinator

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'License.xml'
  name: 'nsblicense'
  displayName: 'Download NSB License from Secure Files'

- powershell: copy-item $(nsblicense.secureFilePath) .\
  workingDirectory: $(Build.ArtifactStagingDirectory)\workflowCoordinator 
  displayName: Copy NSB License into the artifact 

- powershell: '"dotnet workflowcoordinator.dll" | Out-File run.cmd -Encoding ASCII; $LASTEXITCODE'
  workingDirectory: $(Build.ArtifactStagingDirectory)\workflowCoordinator  
  displayName: Generate run.cmd and add to the artifact

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: workflowcoordinator
  displayName: Publish workflowcoordinator Artifact

